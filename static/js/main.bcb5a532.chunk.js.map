{"version":3,"sources":["Styles/colors.ts","Components/NavBtn.tsx","Layout/Header.tsx","Layout/Footer.tsx","Pages/index/banner.tsx","Pages/index/events.tsx","Components/WhiteDevider.tsx","Components/Divider.tsx","Components/Card.tsx","Components/CardSkeleton.tsx","Pages/index/partners/index.tsx","Pages/index/sponsors/index.tsx","Pages/index/index.tsx","CommonPages/bannerPage/banner/index.tsx","CommonPages/bannerPage/search/index.tsx","Components/Btn.tsx","CommonPages/bannerPage/index.tsx","Pages/aboutus/index.tsx","Pages/sponsors/index.tsx","Pages/partners/index.tsx","Pages/contact/faq/index.tsx","Pages/contact/index.tsx","Layout/Content.tsx","Global/api.ts","Base/App.tsx","serviceWorker.ts","index.tsx"],"names":["Color","TREE_GREEN","DEEP_GREEN","TREE_LIGHT_GREEN","BTN_GREEN","BACK_GRAY_WHITE","BACK_GRAY_SUBTITLE","NavBtnContainer","styled","div","props","hovercolor","NavBtn","to","isHash","children","data-toggle","data-target","Nav","Link","as","HashLink","href","className","WidthNavbar","Navbar","color","Logo","img","Header","collapseOnSelect","expand","Brand","src","alt","Toggle","aria-controls","Collapse","id","FooterContainer","Container","FooterTextContainer","ResponsiveTextContainer","fluid","Row","noGutters","Col","lg","style","display","alignItems","justifyContent","height","textAlign","md","ImageContainer","LANDING_PAGE","gql","Banner","useQuery","loading","error","data","highlightColor","flexDirection","marginBottom","width","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","landingPage","image","url","backgroundColor","fontSize","fontWeight","lineHeight","padding","heading","subheading","Events","map","val","idx","key","marginTop","events","evt","title","title_kr","date","WhiteDeviderContainer","back","WhiteDevider","DividerContainer","DividerTextContainer","DividerLineContainer","DividerLine","Divider","CardBtnContainer","CardBtnTitle","CardBottomContainer","logo","CardContainer","CardInbox","CardTopContainer","Image","CardMiddleContainer","CardDescriptionContainer","ellipsisLineCount","CardTitleContainer","CardSinceContainer","renderBtn","value","target","Card","yearMonthDay","name","since","introduction","slogan","homepage","facebook","medium","xs","sm","xl","split","count","CardSkeleton","Partners","limit","parameterizedQuer","partners","subName","establishmentDate","location","email","tags","Sponsors","parameterizedQuery","sponsors","Index","BannerBackContainer","BannerContainer","BannerTitleContainer","BannerSubTitleContainer","renderSubTitle","subTitle","undefined","desc1","desc2","desc3","renderTitle","SearchContainer","BtnContainer","BtnTitleContainer","Btn","SubFooter","BannerPage","isEdit","hasSearch","DescriptionContainer","DescriptionInnerContainer","DescriptionTitleContainer","DescriptionDescContainer","PdfContainer","QueryAboutUsList","renderEvt","event","isLoading","Fragment","span","order","description","aboutUsPage","description1","description2","subDescription","maxWidth","paddingTop","lastComment1","lastComment2","QuerySponsorPage","sponsorPage","subTitle1","subTitle2","subTitle3","QueryPartnerPage","partnerPage","FaqContainer","FaqTitleContainer","FaqDescContainer","FAQ","QueryContact","ContactSubTitleContainer","SubTitle","ContactLastCommentContainer","contact","faqs","item","path","component","window","API","END_POINT","client","ApolloClient","uri","FlexContainer","MaxWidthContainer","App","basename","Content","Footer","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.bcb5a532.chunk.js","sourcesContent":["export default class Color {\n  public static readonly TREE_GREEN = '#186f25';\n  public static readonly DEEP_GREEN = '#003303';\n  public static readonly TREE_LIGHT_GREEN = '#00a118';\n  public static readonly BTN_GREEN = '#003400';\n  public static readonly BACK_GRAY_WHITE = '#fdfdfd';\n  public static readonly BACK_GRAY_SUBTITLE = 'rgba(216, 216, 216, 0.2)';\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport styled from 'styled-components';\nimport Color from '../Styles/colors';\nimport { Nav } from 'react-bootstrap';\n\nconst NavBtnContainer = styled.div<INavContainer>`\n  margin-left: 28px;\n  color: white;\n  font-size: 14px;\n  text-align: center;\n  font-weight: bold;\n  min-width: 90px;\n  &:hover {\n    background-color: ${(props) => props.hovercolor};\n  }\n  @media screen and (max-width: 864px) {\n    margin: 0;\n    background-color: ${() => Color.TREE_GREEN};\n  }\n  padding: 20px 13px 16px 14px;\n`;\n\ntype INavBtn = {\n  to: string;\n  isHash?: boolean;\n  hovercolor?: string;\n};\n\ntype INavContainer = {\n  hovercolor?: string;\n};\n\nconst NavBtn: React.FC<INavBtn> = ({ to, isHash, hovercolor, children }) => (\n  <NavBtnContainer\n    hovercolor={hovercolor}\n    data-toggle=\"collapse\"\n    data-target=\".navbar-collapse.show\"\n  >\n    {isHash ? (\n      <Nav.Link as={HashLink} to={to} href={`${to}`} className=\"p-0\">\n        {children ? children : null}\n      </Nav.Link>\n    ) : (\n      <Nav.Link as={Link} to={to} href={`${to}`} className=\"p-0\">\n        {children ? children : null}\n      </Nav.Link>\n    )}\n  </NavBtnContainer>\n);\n\nexport default NavBtn;\n","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport Color from '../Styles/colors';\nimport NavBtn from '../Components/NavBtn';\nimport { Link } from 'react-router-dom';\n\nconst WidthNavbar = styled(Navbar)`\n  background-color: ${(props) => props.color};\n`;\n\nconst Logo = styled.img`\n  margin-left: 15px;\n  width: 90px;\n  @media screen and (max-width: 864px) {\n    margin: 5px;\n  }\n`;\n\nexport default function Header() {\n  return (\n    <WidthNavbar\n      collapseOnSelect\n      expand=\"md\"\n      className=\"p-0\"\n      color={Color.TREE_GREEN}\n    >\n      <Link to={'/'}>\n        <Navbar.Brand>\n          <Logo src={process.env.PUBLIC_URL + '/logo.png'} alt={'logo'} />\n        </Navbar.Brand>\n      </Link>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <NavBtn to=\"/aboutus\" hovercolor={Color.TREE_LIGHT_GREEN}>\n            About Us\n          </NavBtn>\n          <NavBtn to=\"/partners\" hovercolor={Color.TREE_LIGHT_GREEN}>\n            Partner\n          </NavBtn>\n          <NavBtn to=\"/sponsors\" hovercolor={Color.TREE_LIGHT_GREEN}>\n            Sponsor\n          </NavBtn>\n          <NavBtn to=\"/Contact\" hovercolor={Color.TREE_LIGHT_GREEN}>\n            Contact\n          </NavBtn>\n        </Nav>\n      </Navbar.Collapse>\n    </WidthNavbar>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Color from '../Styles/colors';\n\nconst FooterContainer = styled(Container)`\n  background-color: ${() => Color.DEEP_GREEN};\n`;\n\nconst FooterTextContainer = styled.div`\n  font-size: 14px;\n  color: #ffffff;\n`;\n\nconst ResponsiveTextContainer = styled.div`\n  @media screen and (max-width: 992px) {\n    text-align: center;\n  }\n`;\n\nexport default function () {\n  return (\n    <FooterContainer fluid className={'p-0'}>\n      <Row noGutters>\n        <Col\n          lg={4}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: 120,\n          }}\n          className='d-none d-lg-flex'\n        >\n          <FooterTextContainer>\n            <div>Design by QURIAN, Philographer</div>\n            <ResponsiveTextContainer>\n              contact@unit.center\n            </ResponsiveTextContainer>\n          </FooterTextContainer>\n        </Col>\n        <Col lg={4} className='d-none d-lg-flex'/>\n        <Col\n          lg={4}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: 120,\n          }}\n          className='d-none d-lg-flex'\n        >\n          <FooterTextContainer style={{ textAlign: 'center' }}>\n            Copyright © UNIT 2020\n          </FooterTextContainer>\n        </Col>\n        <Col\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: 120,\n          }}\n          md={12}\n          className='d-flex d-lg-none'\n        >\n          <FooterTextContainer>\n            <ResponsiveTextContainer>\n              Design by QURIAN, Philographer\n            </ResponsiveTextContainer>\n            <ResponsiveTextContainer>\n              contact@unit.center\n            </ResponsiveTextContainer>\n            <ResponsiveTextContainer>\n              Copyright © UNIT 2020\n            </ResponsiveTextContainer>\n          </FooterTextContainer>\n        </Col>\n      </Row>\n    </FooterContainer>\n  );\n}\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport Color from '../../Styles/colors';\n\ninterface LandingPage {\n  landingPage: {\n    heading: string;\n    subheading: string;\n    image: Img;\n  };\n}\n\ninterface Img {\n  url: string;\n}\n\nconst ImageContainer = styled.div`\n  max-width: 960px;\n  height: 360px;\n  background-blend-mode: screen;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.5) 50%,\n    rgba(0, 110, 39, 0.5) 100%\n  );\n`;\n\nconst LANDING_PAGE = gql`\n  {\n    landingPage {\n      heading\n      subheading\n      image {\n        url\n      }\n    }\n  }\n`;\n\nconst Banner = () => {\n  const { loading, error, data } = useQuery<LandingPage>(LANDING_PAGE);\n\n  if (loading)\n    return (\n      <SkeletonTheme\n        color={Color.TREE_GREEN}\n        highlightColor={'rgba(255, 255, 255, 0.2)'}\n      >\n        <div\n          style={{\n            height: '360px',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <div style={{ marginBottom: '6px' }}>\n            <Skeleton width={320} height={60} />\n          </div>\n          <Skeleton width={320} height={29} />\n        </div>\n      </SkeletonTheme>\n    );\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div style={{ display: 'block' }}>\n      <div\n        style={{\n          width: '100%',\n          backgroundRepeat: 'no-repeat',\n          height: '360px',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundImage: `url(${data?.landingPage.image.url})`,\n        }}\n      >\n        <ImageContainer>\n          <div\n            style={{\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              style={{\n                justifyContent: 'center',\n                width: '320px',\n                height: '60px',\n                backgroundColor: 'rgba(24, 111, 37, 0.85)',\n                alignItems: 'center',\n                display: 'flex',\n                fontSize: '24px',\n                fontWeight: 'bold',\n                marginBottom: '6px',\n              }}\n            >\n              <span\n                style={{\n                  color: 'white',\n                  lineHeight: '1',\n                  padding: '0.25em',\n                  textAlign: 'center',\n                }}\n              >\n                {data?.landingPage.heading}\n              </span>\n            </div>\n            <div\n              style={{\n                justifyContent: 'center',\n                width: '320px',\n                height: '29px',\n                backgroundColor: 'rgba(24, 111, 37, 0.85)',\n                alignItems: 'center',\n                display: 'flex',\n                fontSize: '16px',\n                fontWeight: 'bold',\n              }}\n            >\n              <span\n                style={{\n                  color: 'white',\n                  lineHeight: '1',\n                  padding: '0.25em',\n                  textAlign: 'center',\n                }}\n              >\n                {data?.landingPage.subheading}\n              </span>\n            </div>\n          </div>\n        </ImageContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport Skeleton from 'react-loading-skeleton';\n\ninterface LandingPage {\n  landingPage: {\n    events: event[];\n  };\n}\n\ninterface event {\n  title: string;\n  title_kr: string;\n  date: string;\n  image: Img;\n}\n\ninterface Img {\n  url: string;\n}\n\nconst LANDING_PAGE = gql`\n  {\n    landingPage {\n      events {\n        title\n        title_kr\n        date\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\nexport default function Events() {\n  const { loading, error, data } = useQuery<LandingPage>(LANDING_PAGE);\n\n  if (loading)\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {[0, 1, 2].map((val, idx) => {\n            return (\n              <div\n                className=\"col-12 col-sm-12 col-md-12 col-lg-4\"\n                style={{\n                  flexDirection: 'column',\n                  display: 'flex',\n                  height: '120px',\n                  // justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n                key={`evt-${idx}`}\n              >\n                <div style={{ width: '50%' }}>\n                  <Skeleton />\n                </div>\n                <div style={{ marginTop: '8px', width: '70%' }}>\n                  <Skeleton/>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {data?.landingPage.events.map((evt, idx) => {\n          return (\n            <div\n              className=\"col-12 col-sm-12 col-md-12 col-lg-4\"\n              style={{\n                height: '120px',\n                backgroundColor: 'white',\n                textAlign: 'center',\n              }}\n              key={`evt-${idx}`}\n            >\n              <span\n                style={{\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  color: '#186f25',\n                }}\n              >\n                {evt.title}\n              </span>\n              <br />\n              <div style={{ marginTop: '8px' }}>\n                <span style={{ fontSize: '14px', color: '#aeaeae' }}>\n                  {evt.title_kr} | {evt.date}\n                </span>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Color from '../Styles/colors';\n\ninterface IDevider {\n  back: string;\n}\n\nconst WhiteDeviderContainer = styled.div<IDevider>`\n  height: 40px;\n  background-color: ${(props) => props.back};\n`;\n\nexport default function WhiteDevider() {\n  return <WhiteDeviderContainer back={Color.BACK_GRAY_WHITE} />;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype IDividier = {\n  title: string;\n  style?: object;\n};\n\nconst DividerContainer = styled.div`\n  display: flex;\n  align-items: center;\n  height: 40px;\n`;\n\nconst DividerTextContainer = styled.div`\n  font-size: 18px;\n  font-weight: 800;\n  color: #595959;\n  margin-left: 30px;\n`;\n\nconst DividerLineContainer = styled.div`\n  flex: 1;\n  margin-right: 20px;\n  margin-left: 30px;\n`;\n\nconst DividerLine = styled.div`\n  border-bottom: solid 2px #d8d8d8;\n`;\n\nconst Divider: React.FC<IDividier> = ({ title, style }) => {\n  return (\n    <DividerContainer style={style}>\n      <DividerTextContainer>{title}</DividerTextContainer>\n      <DividerLineContainer>\n        <DividerLine />\n      </DividerLineContainer>\n    </DividerContainer>\n  );\n};\n\nexport default Divider;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Col } from 'react-bootstrap';\n\ninterface ILogo {\n  url: string;\n}\n\ninterface ICardContainer {\n  logo?: ILogo;\n}\n\nconst CardBtnContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 24px;\n  border-radius: 15px;\n  border: solid 1px #979797;\n\n  &:not(:last-of-type) {\n    margin-right: 4px;\n  }\n`;\n\nconst CardBtnTitle = styled.div`\n  font-size: 10px;\n  color: #323434;\n  font-weight: bold;\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n\nconst CardBottomContainer = styled.div<ICardContainer>`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${(props) => (props.logo ? '7px' : '15px')};\n  margin-right: 16px;\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  min-width: 320px;\n  justify-content: center;\n  align-items: center;\n  padding: 16px;\n`\n\nconst CardInbox = styled.div<ICardContainer>`\n  height: ${(props) => (props.logo ? '224px' : '159px')};\n  width: 288px;\n  object-fit: contain;\n  border-radius: 8px;\n  border: solid 1px #eeeeee;\n`;\n\nconst CardTopContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 7px 16px 0 16px;\n`;\n\nconst ImageContainer = styled.div``;\n\nconst Image = styled.img`\n  width: 288px;\n  height: 104px;\n`;\n\nconst CardMiddleContainer = styled.div<ICardContainer>`\n  margin: 7px 16px 0 16px;\n  height: ${(props) => (props.logo ? '40px' : '60px')};\n`;\n\ntype ICardDescriptionContainer = {\n  ellipsisLineCount: number;\n};\n\nconst CardDescriptionContainer = styled.div<ICardDescriptionContainer>`\n  width: 256px;\n  //height: 60px;\n  color: #323434;\n  font-size: 14px;\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: ${(props) => props.ellipsisLineCount};\n  -webkit-box-orient: vertical;\n`;\n\nconst CardTitleContainer = styled.div`\n  flex: 1;\n  height: 27px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #000000;\n`;\n\nconst CardSinceContainer = styled.div`\n  height: 18px;\n  font-size: 12px;\n  font-weight: 500;\n  text-align: right;\n  color: rgba(0, 0, 0, 0.45);\n`;\n\ntype ICard = {\n  name: string;\n  subName: string;\n  logo?: ILogo;\n  since?: string;\n  slogan: string;\n  introduction?: string;\n  homepage?: string;\n  facebook?: string;\n  medium?: string;\n};\n\nfunction getYear(yearMonthDay: string) {\n  if (yearMonthDay) {\n    return yearMonthDay.split('-')[0];\n  } else {\n    return '';\n  }\n}\n\nfunction renderBtn(title: string, value?: string) {\n  if (value) {\n    return (\n      <CardBtnContainer>\n        <a href={value} target=\"_blank noopener noreferrer\">\n          <CardBtnTitle>{title}</CardBtnTitle>\n        </a>\n      </CardBtnContainer>\n    );\n  } else {\n    return null;\n  }\n}\n\nconst Card: React.FC<ICard> = ({\n  name,\n  logo,\n  since,\n  slogan,\n  introduction,\n  homepage,\n  facebook,\n  medium,\n}) => {\n  return (\n    <Col xs={12} sm={12} md={6} lg={4} xl={4} className={'p-0'}>\n      <CardContainer>\n        <CardInbox logo={logo}>\n          {logo ? (\n            <ImageContainer>\n              <Image src={logo.url} alt={'logo'} />\n            </ImageContainer>\n          ) : null}\n          <CardTopContainer>\n            <CardTitleContainer>{name}</CardTitleContainer>\n            <CardSinceContainer>\n              {since ? `since ${getYear(since)}` : null}\n            </CardSinceContainer>\n          </CardTopContainer>\n          <CardMiddleContainer logo={logo}>\n            <CardDescriptionContainer ellipsisLineCount={logo ? 2 : 3}>\n              {introduction}\n            </CardDescriptionContainer>\n          </CardMiddleContainer>\n          <CardBottomContainer logo={logo}>\n            {renderBtn('웹페이지', homepage)}\n            {renderBtn('f', facebook)}\n            {renderBtn('m', medium)}\n          </CardBottomContainer>\n        </CardInbox>\n      </CardContainer>\n    </Col>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Skeleton from 'react-loading-skeleton';\nimport { Col } from 'react-bootstrap';\n\ninterface ICardContainer {\n  logo?: boolean;\n}\n\nconst CardContainer = styled.div`\n  display: flex;\n  min-width: 320px;\n  justify-content: center;\n  align-items: center;\n  padding: 16px;\n`;\n\nconst CardInbox = styled.div<ICardContainer>`\n  height: ${(props) => (props.logo ? '224px' : '159px')};\n  width: 288px;\n  object-fit: contain;\n  border-radius: 8px;\n  border: solid 1px #eeeeee;\n`;\n\nconst CardTopContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 15px 16px 0 16px;\n`;\n\nconst ImageContainer = styled.div``;\n\nconst Image = styled.div`\n  width: 288px;\n  height: 104px;\n  padding: 10px;\n`;\n\nconst CardMiddleContainer = styled.div<ICardContainer>`\n  margin: 7px 16px 0 16px;\n  height: ${(props) => (props.logo ? '40px' : '60px')};\n`;\n\nconst CardBottomContainer = styled.div<ICardContainer>`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${(props) => (props.logo ? '2px' : '8px')};\n  margin-right: 16px;\n`;\n\ntype ICardDescriptionContainer = {\n  ellipsisLineCount: number;\n};\n\nconst CardDescriptionContainer = styled.div<ICardDescriptionContainer>`\n  width: 256px;\n  color: #323434;\n  font-size: 14px;\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: ${(props) => props.ellipsisLineCount};\n  -webkit-box-orient: vertical;\n`;\n\nconst CardTitleContainer = styled.div`\n  flex: 1;\n  height: 27px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #000000;\n`;\n\nconst CardSinceContainer = styled.div`\n  width: 20%;\n  height: 18px;\n  font-size: 12px;\n  font-weight: 500;\n  text-align: right;\n  color: rgba(0, 0, 0, 0.45);\n`;\n\nconst CardBtnTitle = styled.div`\n  font-size: 10px;\n  color: #323434;\n  font-weight: bold;\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n\nfunction renderBtn() {\n  return (\n    <CardBtnContainer>\n      <CardBtnTitle>\n        <Skeleton count={1}/>\n      </CardBtnTitle>\n    </CardBtnContainer>\n  );\n}\n\nconst CardBtnContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 24px;\n  border-radius: 15px;\n  border: solid 1px #eeeeee;\n\n  &:not(:last-of-type) {\n    margin-right: 4px;\n  }\n`;\n\ntype ICard = {\n  logo?: boolean;\n};\n\nconst CardSkeleton: React.FC<ICard> = ({\n                                         logo\n                                       }) => {\n  return (\n    <Col xs={12} sm={12} md={6} lg={4} xl={4} className={'p-0'}>\n      <CardContainer>\n        <CardInbox logo={logo}>\n          {logo ? (\n            <ImageContainer>\n              <Image>\n                <Skeleton height={100}/>\n              </Image>\n            </ImageContainer>\n          ) : null}\n          <CardTopContainer>\n            <CardTitleContainer>\n              <div style={{ width: '50%' }}>\n                <Skeleton count={1}/>\n              </div>\n            </CardTitleContainer>\n            <CardSinceContainer>\n              <Skeleton count={1}/>\n            </CardSinceContainer>\n          </CardTopContainer>\n          <CardMiddleContainer logo={logo}>\n            <CardDescriptionContainer ellipsisLineCount={logo ? 2 : 3}>\n              <Skeleton count={(logo)? 2:3}/>\n            </CardDescriptionContainer>\n          </CardMiddleContainer>\n          <CardBottomContainer logo={logo}>\n            {renderBtn()}\n            {renderBtn()}\n            {renderBtn()}\n          </CardBottomContainer>\n        </CardInbox>\n      </CardContainer>\n    </Col>\n  );\n};\n\nexport default CardSkeleton;\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport Card from '../../../Components/Card';\nimport { Container, Row } from 'react-bootstrap';\nimport CardSkeleton from '../../../Components/CardSkeleton';\n\ninterface ILogo {\n  url: string;\n}\n\ninterface IPartner {\n  name: string;\n  subName: string;\n  introduction: string;\n  slogan: string;\n  establishmentDate: string;\n  facebook: string;\n  homepage: string;\n  location: string;\n  medium: string;\n  email: string;\n  tags: string[];\n  logo?: ILogo;\n}\n\ninterface IQueryPartners {\n  partners: IPartner[];\n}\n\nfunction parameterizedQuer(limit: number = 0) {\n  return gql`\n      {\n          partners(limit: ${limit}) {\n              name\n              subName\n              introduction\n              slogan\n              establishmentDate\n              facebook\n              homepage\n              location\n              medium\n              email\n              tags\n              logo {\n                  url\n              }\n          }\n      }\n  `;\n}\n\ntype IPartners = {\n  limit?: number;\n}\n\nconst Partners: React.FC<IPartners> = ({ children, limit }) => {\n  const { loading, error, data } = useQuery<IQueryPartners>(parameterizedQuer(limit));\n\n  if (loading) return renderLoading();\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Container>\n      <Row>\n        {data?.partners.map(\n          ({\n             name,\n             subName,\n             introduction,\n             slogan,\n             establishmentDate,\n             facebook,\n             homepage,\n             location,\n             medium,\n             email,\n             tags,\n             logo\n           }) => (\n            <Card\n              since={establishmentDate}\n              name={name}\n              subName={subName}\n              slogan={slogan}\n              introduction={introduction}\n              homepage={homepage}\n              facebook={facebook}\n              medium={medium}\n              key={name}\n            />\n          )\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nfunction renderLoading() {\n  return (\n    <Container>\n      <Row>\n        {[0, 1, 2, 3, 4, 5].map(\n          (val, idx) => (\n            <CardSkeleton\n              logo={false}\n              key={`skeleton-${val}`}\n            />\n          )\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Partners;","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport Card from '../../../Components/Card';\nimport { Container, Row } from 'react-bootstrap';\nimport CardSkeleton from '../../../Components/CardSkeleton';\n\ninterface ILogo {\n  url: string;\n}\n\ninterface ISponsor {\n  name: string;\n  subName: string;\n  dept: string;\n  introduction: string;\n  slogan: string;\n  establishmentDate: string;\n  homepage: string;\n  location: string;\n  email: string;\n  tags: string[];\n  logo: ILogo;\n}\n\ninterface IQuerySponsors {\n  sponsors: ISponsor[];\n}\n\nfunction parameterizedQuery(limit: number = 0) {\n  return gql`\n      {\n          sponsors(limit: ${limit}) {\n              name\n              subName\n              introduction\n              slogan\n              establishmentDate\n              homepage\n              location\n              email\n              tags\n              logo {\n                  url\n              }\n          }\n      }\n  `;\n}\n\ntype ISponsors = {\n  limit?: number;\n}\n\nconst Sponsors: React.FC<ISponsors> = ({ children, limit }) => {\n  const { loading, error, data } = useQuery<IQuerySponsors>(parameterizedQuery(limit));\n\n  if (loading) return renderLoading();\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Container>\n      <Row>\n        {data?.sponsors.map(\n          ({\n             name,\n             subName,\n             introduction,\n             slogan,\n             establishmentDate,\n             homepage,\n             location,\n             email,\n             tags,\n             logo\n           }) => (\n            <Card\n              since={establishmentDate}\n              name={name}\n              subName={subName}\n              slogan={slogan}\n              introduction={introduction}\n              logo={logo}\n              homepage={homepage}\n              key={name}\n            />\n          )\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nfunction renderLoading() {\n  return (\n    <Container>\n      <Row>\n        {[0, 1, 2, 3, 4, 5].map(\n          (val, idx) => (\n            <CardSkeleton\n              logo={true}\n              key={`skeleton-${val}`}\n            />\n          )\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Sponsors;","import React from 'react';\nimport Banner from './banner';\nimport Events from './events';\nimport WhiteDevider from '../../Components/WhiteDevider';\nimport Divider from '../../Components/Divider';\nimport Partners from './partners';\nimport Sponsors from './sponsors';\n\nexport default function Index() {\n  return (\n    <div>\n      <Banner />\n      <WhiteDevider />\n      <Events />\n      <Divider title={'Partner'} />\n      <Partners limit={6}/>\n      <Divider title={'Sponsor'} style={{ marginTop: 25 }} />\n      <Sponsors limit={6}/>\n    </div>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Color from '../../../Styles/colors';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\ntype IBanner = {\n  title: string;\n  desc1: string;\n  desc2: string;\n  desc3?: string;\n}\n\nconst BannerBackContainer = styled.div`\n  height: 240px;\n  background-color: ${() => Color.TREE_LIGHT_GREEN};\n`;\n\nconst BannerContainer = styled.div`\n  margin-top: 50px;\n  margin-left: 48px;\n`;\n\nconst BannerTitleContainer = styled.div`  \n  height: 36px;\n  font-size: 24px;\n  font-weight: bold;\n  color: white; \n`;\n\nconst BannerSubTitleContainer = styled.div`\n  width: 320px;\n  height: 84px; \n  font-size: 14px;\n  color: white;\n  margin-top: 43px;\n`;\n\nfunction renderTitle(title: string) {\n  return (title)? title : <SkeletonTheme color={'transparent'} highlightColor={Color.TREE_GREEN}>\n    <div style={{ fontSize: 24, lineHeight: 2, width: '80px' }}>\n      <Skeleton/>\n    </div>\n  </SkeletonTheme>\n}\n\nfunction renderSubTitle(subTitle?: string) {\n  if (subTitle === undefined) {\n    return (<div/>)\n  }\n  if (subTitle) {\n    return <div>\n      {subTitle}<br/>\n    </div>;\n  } else {\n    return <SkeletonTheme color={'transparent'} highlightColor={Color.TREE_GREEN}>\n      <div style={{ fontSize: 14, lineHeight: 1, marginBottom: '5px', width: '90%' }}>\n        <Skeleton/>\n      </div>\n    </SkeletonTheme>\n  }\n}\n\nconst Banner: React.FC<IBanner> = ({ children, title, desc1, desc2, desc3 }) => {\n  return (\n    <BannerBackContainer>\n      <BannerContainer>\n        <BannerTitleContainer>\n          {\n            renderTitle(title)\n          }\n        </BannerTitleContainer>\n        <BannerSubTitleContainer>\n          {renderSubTitle(desc1)}\n          {renderSubTitle(desc2)}\n          {renderSubTitle(desc3)}\n        </BannerSubTitleContainer>\n      </BannerContainer>\n    </BannerBackContainer>\n  );\n  // return (\n  //   <div style={{ fontSize: 20 }}>\n  //     <h1>{<Skeleton />}</h1>\n  //   </div>\n  // );\n};\n\nexport default Banner;","import React from 'react';\nimport styled from 'styled-components';\n\nconst SearchContainer = styled.div`\n  height: 40px;\n`;\n\nexport default function () {\n  return (\n    <SearchContainer>\n    </SearchContainer>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Color from '../Styles/colors';\n\nconst BtnContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 320px;\n  height: 48px;\n  border-radius: 24px;\n  border: solid 2px ${() => Color.BTN_GREEN};\n  opacity: 0.8;\n  background-color: rgba(255, 255, 255, 0.7);\n`;\n\nconst BtnTitleContainer = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  color: ${() => Color.BTN_GREEN};\n`\n\nconst Btn: React.FC = ({children}) => {\n  return <BtnContainer>\n    <BtnTitleContainer>\n      {children}\n    </BtnTitleContainer>\n  </BtnContainer>;\n}\n\nexport default Btn;","import React from 'react';\nimport styled from 'styled-components';\nimport Banner from './banner';\nimport Search from './search';\nimport Btn from '../../Components/Btn';\n\ntype IBannerPage = {\n  title: string;\n  desc1: string;\n  desc2: string;\n  desc3?: string;\n  isEdit?: boolean;\n  hasSearch?: boolean;\n}\n\nconst BannerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SubFooter = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 96px;\n  background-color: rgba(0, 163, 0, 0.15);\n  margin-top: 348px;\n`\n\nconst BannerPage: React.FC<IBannerPage> = ({children, title, desc1, desc2, desc3, isEdit= false, hasSearch = false}) => {\n  return (\n    <BannerContainer>\n      <Banner title={title} desc1={desc1} desc2={desc2} desc3={desc3}/>\n      {\n        hasSearch? <Search/> : null\n      }\n      {children}\n      {\n        isEdit? <SubFooter>\n          <Btn>{title} 단체등록, 정보수정 요청</Btn>\n        </SubFooter> : null\n      }\n    </BannerContainer>\n  );\n}\n\nexport default BannerPage;","import React from 'react';\nimport styled from 'styled-components';\nimport BannerPage from './../../CommonPages/bannerPage';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport Skeleton from 'react-loading-skeleton';\n\nconst DescriptionContainer = styled.div`\n  padding: 28px 48px 24px 48px\n`;\n\nconst DescriptionInnerContainer = styled.div`\n  height: 100%;\n  margin-top: 7.5%;\n`;\n\nconst DescriptionTitleContainer = styled.div`\n  height: 48px;\n  font-size: 21px;\n  font-weight: bold;\n  color: #000000;\n`;\n\nconst DescriptionDescContainer = styled.div`\n  word-break: keep-all;\n  font-size: 16px;\n  color: #000000;\n`;\n\nconst PdfContainer = styled.div`\n  margin-top: 16px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #00a300;\n`;\n\ninterface Iimage {\n  url: string;\n}\n\ninterface IEvent {\n  title: string;\n  title_kr: string;\n  description: string;\n  summary: string;\n  date: string;\n  image: Iimage;\n}\n\ninterface IAboutUsPage {\n  aboutUsPage: {\n    title: string;\n    description1: string;\n    description2: string;\n    subTitle: string;\n    subDescription: string;\n    lastComment1: string;\n    lastComment2: string;\n    events: IEvent[];\n  }\n}\n\nconst QueryAboutUsList = gql`\n    {\n        aboutUsPage {\n            title,\n            description1,\n            description2,\n            subTitle,\n            subDescription,\n            lastComment1,\n            lastComment2\n            events {\n                title,\n                title_kr,\n                description,\n                summary,\n                date,\n                image {\n                    url\n                }\n            }\n        }\n    }\n`;\n\nfunction renderSince(yearMonthDay?: string) {\n  return `SINCE ${yearMonthDay?.split('-')[0]}`;\n}\n\ntype TEvent = {\n  title: string;\n  title_kr: string;\n  description: string;\n  summary: string;\n  date: string;\n  image: Iimage;\n}\n\nconst renderEvt = (idx: number, event?: TEvent, isLoading?: boolean) => {\n  return (\n    <React.Fragment key={`evt-${idx}`}>\n      <Col xs={{ span: 12, order: 2 * (1 + idx) }} lg={6}>\n        <DescriptionInnerContainer>\n          <DescriptionTitleContainer>\n            {\n              (isLoading) ? <div style={{ fontSize: '31px', width: '95px' }}><Skeleton/></div> : event?.title\n            }\n          </DescriptionTitleContainer>\n          <DescriptionDescContainer>\n            {\n              (isLoading) ? <div style={{ fontSize: '18px', width: '50%' }}><Skeleton/>\n              </div> : `${event?.title_kr} | ${renderSince(event?.date)}`\n            }\n            <br/>\n            {\n              (isLoading) ?\n                <div style={{ fontSize: '18px', width: '100%' }}><Skeleton count={3}/></div> : event?.description\n            }\n          </DescriptionDescContainer>\n        </DescriptionInnerContainer>\n      </Col>\n      <Col xs={{ span: 12, order: 1 + (2 * idx) }} lg={6}>\n        {\n          (isLoading) ?\n            <div style={{ fontSize: '160px', width: '100%', lineHeight: 0.1, padding: '7.5%' }}><Skeleton/></div> :\n            <img src={event?.image.url} alt={event?.title} style={{ width: '100%', padding: '7.5%' }}/>\n        }\n      </Col>\n    </React.Fragment>\n  );\n};\n\nexport default function() {\n  const { error, data } = useQuery<IAboutUsPage>(QueryAboutUsList);\n\n  if (error) return <p>Error :(</p>;\n  return <BannerPage title={data?.aboutUsPage.title || ''} desc1={data?.aboutUsPage.description1 || ''}\n                     desc2={data?.aboutUsPage.description2 || ''} desc3={undefined}>\n    <DescriptionContainer>\n      <DescriptionTitleContainer>\n        {\n          (data) ? <span>{data.aboutUsPage.title}</span> :\n            <div style={{ fontSize: '31px', width: '90px' }}><Skeleton/></div>\n        }\n      </DescriptionTitleContainer>\n      <DescriptionDescContainer>\n        {\n          (data) ? <span>{data.aboutUsPage.subDescription}</span> :\n            <div style={{ fontSize: '16px', width: '100%' }}><Skeleton count={4}/></div>\n        }\n      </DescriptionDescContainer>\n      <PdfContainer>\n        {\n          <span>{'* UNIT 단체소개서.pdf'}</span>\n        }\n      </PdfContainer>\n    </DescriptionContainer>\n    <Container className={'p-0'} style={{ maxWidth: 'inherit' }}>\n      <DescriptionContainer>\n        <Row>\n          {\n            (data) ? data.aboutUsPage.events.map((event, idx) => {\n              return (\n                renderEvt(idx, event)\n              );\n            }) : [0, 1, 2].map((idx) => renderEvt(idx, undefined, true))\n          }\n        </Row>\n      </DescriptionContainer>\n      <DescriptionContainer style={{ paddingTop: 0 }}>\n        {data?.aboutUsPage.lastComment1}<br/>\n        {data?.aboutUsPage.lastComment2}\n      </DescriptionContainer>\n    </Container>\n  </BannerPage>;\n}\n","import React from 'react';\nimport BannerPage from './../../CommonPages/bannerPage';\nimport Sponsors from '../index/sponsors';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nexport default function() {\n  interface ISponsorPage {\n    sponsorPage: {\n      title: string;\n      subTitle1: string;\n      subTitle2: string;\n      subTitle3: string;\n    }\n  }\n\n  const QuerySponsorPage = gql`\n      {\n          sponsorPage {\n              title,\n              subTitle1,\n              subTitle2,\n              subTitle3\n          }\n      }\n  `;\n  const { error, data } = useQuery<ISponsorPage>(QuerySponsorPage);\n  if (error) return <p>Error :(</p>;\n  return <BannerPage title={data?.sponsorPage.title || ''} desc1={data?.sponsorPage.subTitle1 || ''}\n                     desc2={data?.sponsorPage.subTitle2 || ''} desc3={data?.sponsorPage.subTitle3 || ''} isEdit={true} hasSearch>\n    <Sponsors/>\n  </BannerPage>;\n}\n","import React from 'react';\nimport BannerPage from './../../CommonPages/bannerPage';\nimport Partners from '../index/partners';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nexport default function() {\n  interface IPartnerPage {\n    partnerPage: {\n      title: string;\n      subTitle1: string;\n      subTitle2: string;\n      subTitle3: string;\n    }\n  }\n\n  const QueryPartnerPage = gql`\n      {\n          partnerPage {\n              title,\n              subTitle1,\n              subTitle2,\n              subTitle3\n          }\n      }\n  `;\n  const { error, data } = useQuery<IPartnerPage>(QueryPartnerPage);\n\n  if (error) return <p>Error :(</p>;\n\n  return <BannerPage title={data?.partnerPage.title || ''} desc1={data?.partnerPage.subTitle1 || ''}\n                     desc2={data?.partnerPage.subTitle2 || ''} desc3={data?.partnerPage.subTitle3 || ''} isEdit={true}\n                     hasSearch>\n    <Partners/>\n  </BannerPage>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Skeleton from 'react-loading-skeleton';\n\nconst FaqContainer = styled.div`\n  height: 136px;\n`\n\nconst FaqTitleContainer = styled.div`\n  font-size: 21px;\n  font-weight: bold;\n  margin: 20px 48px 4px 48px; \n`\n\nconst FaqDescContainer = styled.div`\n  margin: 0 48px 0 48px;\n  font-size: 16px; \n`\n\ntype IFAQ = {\n  title: string;\n  description1: string;\n  description2: string;\n  isLoading?: boolean;\n}\n\nconst FAQ: React.FC<IFAQ> = ({title, description1, description2, isLoading = false}) => {\n  return (\n    <FaqContainer>\n      <FaqTitleContainer>\n        {\n          (isLoading)? <div style={{fontSize: '30px', width: '300px'}}><Skeleton/></div>: <div>{title}</div>\n        }\n      </FaqTitleContainer>\n      <FaqDescContainer>\n        {\n          (isLoading)? <div style={{fontSize: '20px', width: '270px'}}><Skeleton/></div>: <div>{description1}</div>\n        }\n        {\n          (isLoading)? <div style={{fontSize: '20px', width: '270px'}}><Skeleton/></div>: <div>{description2}</div>\n        }\n      </FaqDescContainer>\n    </FaqContainer>\n  );\n}\n\n\nexport default FAQ;","import React from 'react';\nimport styled from 'styled-components';\nimport BannerPage from '../../CommonPages/bannerPage';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Color from '../../Styles/colors';\nimport Skeleton from 'react-loading-skeleton';\nimport FAQ from './faq';\n\ninterface IFaq {\n  title: string;\n  description1: string;\n  description2: string;\n}\n\ninterface IContact {\n  contact: {\n    title: string;\n    subTitle: string;\n    description1: string;\n    description2: string;\n    description3: string;\n    lastComment1: string;\n    lastComment2: string;\n    faqs: IFaq[];\n  }\n}\n\nconst QueryContact = gql`\n    {\n        contact {\n            title,\n            subTitle,\n            description1,\n            description2,\n            description3,\n            lastComment1,\n            lastComment2,\n            faqs {\n                title,\n                description1,\n                description2\n            }\n        }\n    }\n`\n\nconst ContactSubTitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  height: 80px;\n  background-color: ${() => Color.BACK_GRAY_SUBTITLE};\n`;\n\nconst SubTitle = styled.div`\n  width: 100%;\n  margin-left: 48px;\n  font-size: 24px;\n  font-weight: bold; \n`\n\nconst ContactLastCommentContainer = styled.div`\n  margin: 200px 48px 24px 48px;\n  font-size: 16px;\n`\n\nexport default function () {\n  const { error, data } = useQuery<IContact>(QueryContact);\n\n  if (error) return <p>Error :(</p>;\n  return <BannerPage title={data?.contact.title || ''} desc1={data?.contact.description1 || ''} desc2={data?.contact.description2 || ''} desc3={undefined}>\n    <ContactSubTitleContainer>\n      <SubTitle>\n        {\n          (data)? data?.contact.subTitle : <div style={{ fontSize: '32px', width: '100px' }}>\n            <Skeleton/>\n          </div>\n        }\n      </SubTitle>\n    </ContactSubTitleContainer>\n    {\n      (data)? data?.contact.faqs.map((item, idx) => <FAQ key={`faq-${idx}`} title={item.title} description1={item.description1} description2={item.description2}/>) : [0,1,2,3].map((item) => <FAQ key={`faq-${item}`} title={''} description1={''} description2={''} isLoading={true}/>)\n    }\n    <ContactLastCommentContainer>\n      {data?.contact.lastComment1}<br/>\n      {data?.contact.lastComment2}\n    </ContactLastCommentContainer>\n  </BannerPage>;\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Index from '../Pages/index';\nimport Aboutus from '../Pages/aboutus';\nimport Sponsors from '../Pages/sponsors';\nimport Partners from '../Pages/partners';\nimport Contact from '../Pages/contact';\n\nexport default function () {\n  return (\n    <Switch>\n      <Route path=\"/aboutus\">\n        <Aboutus />\n      </Route>\n      <Route path=\"/sponsors\">\n        <Sponsors />\n      </Route>\n      <Route path=\"/partners\">\n        <Partners />\n      </Route>\n      <Route path=\"/contact\">\n        <Contact />\n      </Route>\n      <Route path='/moin' component={() => {\n        window.location.href = 'https://www.canva.com/design/DAD_A2X2iXY/gXB_B9GOFN_HVgS8KQYfyw/view#1';\n        return null;\n      }}/>\n      <Route path=\"/\">\n        <Index />\n      </Route>\n    </Switch>\n  );\n}\n","export default class API {\n  public static readonly END_POINT = 'https://unit-server.herokuapp.com';\n}\n","import React from 'react';\nimport './App.css';\nimport Header from '../Layout/Header';\nimport Footer from '../Layout/Footer';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Content from '../Layout/Content';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport API from '../Global/api';\n\nconst client = new ApolloClient({\n  uri: `${API.END_POINT}/graphql`,\n});\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst MaxWidthContainer = styled.div`\n  max-width: 960px;\n  flex: 1;\n`;\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <Router basename=\"/\">\n        <FlexContainer>\n          <MaxWidthContainer>\n            <Header />\n            <Content />\n            <Footer />\n          </MaxWidthContainer>\n        </FlexContainer>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Base/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}